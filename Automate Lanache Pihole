Taken from https://oct8l.gitlab.io/posts/2021/297/scripting-lancache-dns-updates-with-pi-hole/ (archive url https://web.archive.org/web/20220814105422/https://oct8l.gitlab.io/posts/2021/297/scripting-lancache-dns-updates-with-pi-hole/)

Automates the process for PiHoles to use lancache + code for redundent unraid 
Requires SSH keys set up from local to unriad.
Requires git to be installed, cant be a Gem or NPM.
Only runs when there is changes thanks to remote update check.

#!/bin/bash

### Set variables, change as necessary ###
# Username of the regular user you're using
SYSTEMUSER=dietpi
# Directory the git repository is synced to
GITSYNCDIR=/home/$SYSTEMUSER/cache-domains
# Your personalized config file from "Setting up our config.json file" step
DNSMASQCONFIG=/home/$SYSTEMUSER/config.json
BRANCH=master

# Create a new, random temp directory and make sure it was created, else exit
TEMPDIR=$(mktemp -d)

  if [ ! -e $TEMPDIR ]; then
      >&2 echo "Failed to create temp directory"
      exit 1
  fi

# Switch to the git directory and pull any new data
	cd $GITSYNCDIR && \
  	git remote update > /dev/null 2>&1

	LAST_UPDATE=$(git show --no-notes --format=format:"%H" $BRANCH | head -n 1)
	LAST_COMMIT=$(git show --no-notes --format=format:"%H" origin/$BRANCH | head -n 1)

if [ $LAST_COMMIT != $LAST_UPDATE ]; then
	echo "Running Update"
	git pull > /dev/null 2>&1
	# Copy the .txt files and .json file to the temp directory
	cp `find $GITSYNCDIR -name "*.txt" -o -name cache_domains.json` $TEMPDIR

	# Copy the create-dnsmasq.sh script to our temp directory
	mkdir $TEMPDIR/scripts/ && \
  	cp $GITSYNCDIR/scripts/create-dnsmasq.sh $TEMPDIR/scripts/ && \
  	chmod +x $TEMPDIR/scripts/create-dnsmasq.sh

	# Copy the config over
	cp $DNSMASQCONFIG $TEMPDIR/scripts/

	# Generate the dnsmasq files with the script
	cd $TEMPDIR/scripts/ && \
  	bash ./create-dnsmasq.sh > /dev/null 2>&1

	# Copy the dnsmasq files
	cp -r $TEMPDIR/scripts/output/dnsmasq/*.conf /etc/dnsmasq.d/
	rsync --exclude $TEMPDIR/scripts/output/dnsmasq/*.conf root@192.168.0.27:/mnt/user/appdata/pihole/dnsmasq.d/

	# Restart pihole-FTL
	sudo service pihole-FTL restart
	ssh root@192.168.0.27 'docker restart pihole-template'

	# Delete the temp directory to clean up files
	trap "exit 1"           HUP INT PIPE QUIT TERM
	trap 'rm -rf "$TEMPDIR"' EXIT
else
	echo "Nothing to do!"
fi
